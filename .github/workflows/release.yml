#
name: Demo Push

# This workflow runs when any of the following occur:
# - A tag starting with "v" is created
# I'll keep the following options, just to uncomment them when needed.
# - A push is made to a branch called `main`
# - A pull request is created or updated
on:
  push:
    #branches:
    #  - main
    tags:
     - v*
  pull_request:
env:
  IMAGE_NAME: go-bender
#
jobs:
  # This pushes the image to GitHub Packages.
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Build image
        run: make service

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build andPush image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "main" ] && VERSION=latest
          [ "$VERSION" == "merge" ] && VERSION=latest
          
          echo "docker tag $IMAGE_NAME $IMAGE_ID:$VERSION"
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION

          echo "docker push $IMAGE_ID:$VERSION"
          docker push $IMAGE_ID:$VERSION
